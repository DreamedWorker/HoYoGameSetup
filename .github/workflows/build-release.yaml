name: Multi-arch Build and Release

on:
  pull_request:
    branches:
      - main

env:
  GRADLE_VERSION: 8.10.2
  JAVA_VERSION: '21'

jobs:
  build:
    name: Build DMGs
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [arm64]
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Oracle JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: ${{ env.JAVA_VERSION }}
          check-latest: true
          server-id: github # 必须配置才能使用 Oracle JDK
          oracle-license: agree # 自动接受 Oracle 许可协议

#      - name: Configure arch
#        run: |
#          # 设置架构相关环境变量
#          echo "TARGET_ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
#          echo "JAVA_HOME_${matrix.arch}_X64=$JAVA_HOME" >> $GITHUB_ENV

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ matrix.arch }}-${{ hashFiles('**/*.gradle*', 'gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ matrix.arch }}-
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew packageReleaseDmg -PtargetArch=${{ matrix.arch }}
#        env:
#          CI: true
#          JAVA_OPTS: "-Dos.arch=${{ matrix.arch }}"

      - name: Archive DMG
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.arch }}
          path: /Users/runner/work/HoYoGameSetup/HoYoGameSetup/composeApp/build/compose/binaries/main-release/dmg/*.dmg

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare assets
        run: |
          mkdir -p release-assets
          find artifacts -name '*.dmg' -exec cp {} release-assets \;

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v$(date +%s)"
          name: "Multi-arch Build $(date +'%Y-%m-%d')"
          body: |
            Auto-generated multi-architecture build:
            - ARM64 (Apple Silicon)
          draft: false
          prerelease: false
          files: |
            release-assets/*.dmg
